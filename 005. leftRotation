A left rotation operation on an array of size n shifts each of the array's elements 1 unit to the left. Given an integer, d, rotate the array that many steps left and return the result.

Example
d=2
arr=[1,2,3,4,5]
After 2 rotations, arr'=[3,4,5,1,2] .

Function Description

rotateLeft has the following parameters:
int d: the amount to rotate by
int arr[n]: the array to rotate

Returns
int[n]: the rotated array

Input Format

The first line contains two space-separated integers that denote n, the number of integers, and d, the number of left rotations to perform.
The second line contains n space-separated integers that describe arr[].

Constraints
1<=n<=10^5
1<=d<=n
1<=a[i]<=10^6

Sample Input

5 4
1 2 3 4 5

Sample Output
5 1 2 3 4





Solution
import math
import os
import random
import re
import sys

#
# Complete the 'rotateLeft' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts following parameters:
#  1. INTEGER d
#  2. INTEGER_ARRAY arr
#

def rotateLeft(d, arr):
    # Write your code here
    n = len(arr)
    prr=[0]*n
    for i in range(n):
        prr[(i+n-d)%n]=arr[i]
""""
Each time I read an element of the array from the input, I directly assign it to the array at the speific index after shifting. d left rotations equal (n-d) right rotations. 
The array has a size of n, so when the index (i+n-d) is equal to n, the index actually goes back to the starting index. 
I use mod to get the correct index where I want to assign the element when the index is larger than n.
""""
    return prr

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = input().rstrip().split()

    n = int(first_multiple_input[0])

    d = int(first_multiple_input[1])

    arr = list(map(int, input().rstrip().split()))

    result = rotateLeft(d, arr)

    fptr.write(' '.join(map(str, result)))
    fptr.write('\n')

(or)

for value in (arr[d:] + arr[0:d]): print value,

(or)
when d is greater than n
shifted = a[d%n:] + a[:d%n]
#print(*printed)
    for num in shifted:
        print(num, end=' ')

(or)
import sys
n, d= map(int, raw_input().strip().split(' '))
lst = map(int, raw_input().strip().split(' '))

rounds = n - d

if rounds != 0:
    final= lst[n-rounds:] + lst[:n-rounds]
else:
    final = lst
    
for _ in final:
    print _,

    
    
