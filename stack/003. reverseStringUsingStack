// Online C++ compiler to run C++ program online

//here we are using stack implicility

#include <iostream>
#include<cstring>
#include <stack>
#include<string>
using namespace std;
void reverse(char*c, int n){
    stack<char> s;
    for(int i =0;i<n;i++){
        s.push(c[i]);
    }
    for(int i=0;i<n;i++){
        c[i]=s.top();
        s.pop();
    }
}
int main() {
    char c[200];
    printf("enter the string");
    gets(c);
    reverse(c,strlen(c);
    printf("%s",c);
}
(or)
#include <stdio.h>  
#include <string.h>  
  
#define max 100  
int top,stack[max];  
  
void push(char x){  
  
      // Push(Inserting Element in stack) operation  
      if(top == max-1){  
          printf("stack overflow");  
      }  else {  
          stack[++top]=x;  
      }  
  
}  
  
void pop(){  
    // Pop (Removing element from stack)  
      printf("%c",stack[top--]);  
}  
  
  
main()  
{  
   char str[]="sri lanka";  
   int len = strlen(str);  
   int i;  
  
   for(i=0;i<len;i++)  
        push(str[i]);  
  
   for(i=0;i<len;i++)  
      pop();  
} 

(or)

int main()  
{  
   char str[]="sri lanka";  
   int len = strlen(str);  
   int i;  
   char str1[len];
  
   for(i=0;i<len;i++){  
        push(str[i]); 
   }
  
   for(i=0;i<len;i++) {
      str1[i]=stack[--top];
   }
  for(i=0;i<len;i++){
      printf("%c",str1[i]);
  }


using stack for reversal of string is not a best apprach because of its space complexity. whereas linked list is an intuitive approach.
