Example 1:

Input: word1 = "abc", word2 = "pqr"
Output: "apbqcr"
Explanation: The merged string will be merged as so:
word1:  a   b   c
word2:    p   q   r
merged: a p b q c r

Example 2:

Input: word1 = "ab", word2 = "pqrs"
Output: "apbqrs"
Explanation: Notice that as word2 is longer, "rs" is appended to the end.
word1:  a   b 
word2:    p   q   r   s
merged: a p b q   r   s

Example 3:

Input: word1 = "abcd", word2 = "pq"
Output: "apbqcd"
Explanation: Notice that as word1 is longer, "cd" is appended to the end.
word1:  a   b   c   d
word2:    p   q 
merged: a p b q c   d
 

Constraints:

1 <= word1.length, word2.length <= 100
word1 and word2 consist of lowercase English letters.


class Solution:
   def mergeAlternately(self, word1: str, word2: str) -> str:
        str = [ ]
        i = 0
        j = 0
        len_word1 = len(word1)
        len_word2 = len(word2)
         
        while(i < len_word1 and j < len_word2):
            str += word1[i]
            str += word2[j]
            i = i+1
            j = j+1
        
        if i < len_word1:
            str += word1[i:]

        if j < len_word2:
            str += word2[j:]
        
        return ''.join(str)
        
