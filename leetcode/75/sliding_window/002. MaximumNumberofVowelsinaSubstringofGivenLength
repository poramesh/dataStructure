
Given a string s and an integer k, return the maximum number of vowel letters in any substring of s with length k.

Vowel letters in English are 'a', 'e', 'i', 'o', and 'u'.

 

Example 1:

Input: s = "abciiidef", k = 3
Output: 3
Explanation: The substring "iii" contains 3 vowel letters.

Example 2:

Input: s = "aeiou", k = 2
Output: 2
Explanation: Any substring of length 2 contains 2 vowels.

Example 3:

Input: s = "leetcode", k = 3
Output: 2
Explanation: "lee", "eet" and "ode" contain 2 vowels.
 

Constraints:

1 <= s.length <= 105
s consists of lowercase English letters.
1 <= k <= s.length



PASSED 102/106 test cases haha 

class Solution:
    def maxVowels(self, s: str, k: int) -> int:
        su = 0
        for i in range(len(s)-k+1):
            ch = s[i:i+k]
            su = max(su, sum(1 for cha in ch if cha in "aeiou"))
        return su


(or)

class Solution:
    def maxVowels(self, s: str, k: int) -> int:

        max_sum = count = sum(1 for i in range(k) if s[i] in "aeiou")   
        # Iterate through the string starting from the k-th index
        for i in range(k,len(s)):

            if s[i-k] in "aeoiu": count-=1             # Check if the character sliding out of the window is a vowel
            if s[i] in "aeiou": count+=1                       # Check if the new character sliding into the window is a vowel
            max_sum = max(count,max_sum)


        return max_sum


Input: s = "aeiou", k = 2

i = 2 
s[2-2= 0] 
s[3] 

i = 3
s[3-2=1]
s[3]

i = 4
s[4-2=2]
s[4]


you can notice how window is sliding between 2

(or)

class Solution:
    def maxVowels(self, s: str, k: int) -> int:
        ans= 0            
        currCount=0
        vowels= "aeiou"
      
        for i in range(len(s)):
            if i >= k:
                if s[i-k] in vowels:
                    currCount -= 1
            if s[i] in vowels:
                currCount += 1
            ans = max(currCount, ans)
        return ans


Initialization:
ans = 0, currCount = 0, vowels = "aeiou"


Iteration:
i = 0: s[0] = 'a' → vowel → currCount = 1, ans = 1
i = 1: s[1] = 'b' → not a vowel → currCount = 1, ans = 1
i = 2: s[2] = 'c' → not a vowel → currCount = 1, ans = 1
i = 3: s[3] = 'i' → vowel → currCount = 2
(Now, window = s[1:4] = 'bci') → ans = 2
i = 4: s[4] = 'i' → vowel → currCount = 3
(Window = s[2:5] = 'cii') → ans = 3
i = 5: s[5] = 'i' → vowel → currCount = 3
(Window = s[3:6] = 'iii') → ans = 3
i = 6: s[6] = 'd' → not a vowel → currCount = 2
(Window = s[4:7] = 'iid') → ans = 3
i = 7: s[7] = 'e' → vowel → currCount = 2
(Window = s[5:8] = 'ide') → ans = 3
i = 8: s[8] = 'f' → not a vowel → currCount = 1
(Window = s[6:9] = 'def') → ans = 3


