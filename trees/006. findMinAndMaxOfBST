//finding minimum and maximum element in the binary search tree.


#include<stdio.h>
#include<stdbool.h>
#include<stdlib.h>

struct bstNode{
    int data;
    struct bstNode *left;
    struct bstNode *right;
};

struct bstNode* getNewNode(int data){
    struct bstNode* newNode = (struct bstNode*)(malloc(sizeof(struct bstNode)));
    newNode->data = data;
    newNode->left=NULL;
    newNode->right=NULL;
    return newNode;
}

struct bstNode* insert(int data, struct bstNode* root){
    if(root==NULL){
        root = getNewNode(data);
    } else if(data <= root->data){
        root->left = insert(data,root->left);
    } else root->right = insert(data, root->right);
    return root;
}

bool search(int data, struct bstNode* root){
    if(root==NULL){
        return false;
    } else if(root->data==data){
        return true;
    } else if(data<=root->data){
        return search(data, root->left);
    } else return search(data,root->right);
}

void findMin(struct bstNode* root){
    if(root==NULL){
        printf("error, tree is empty");
        return;
    }
    
    while(root->left != NULL){
        root = root->left;
    }
    printf("minimum value in the tree is:%d", root->data);
}

void findMax(struct bstNode* root){
    if(root==NULL){
        printf("erroor, tree is empty");
        return;
    }  
    while(root->right!=NULL){
        root=root->right;
    }
    printf("\nthe maximum element in the tree is:%d",root->data);
}

void recursionFindMin(struct bstNode* root){
    if(root==NULL){
        printf("error,tree is empty");
    } else if (root->left==NULL){
        printf("\nminimum elelment in the tree using recursion is:%d\n", root->data );
        return;
    }
    return recursionFindMin(root->left);
}


void recursionFindMax(struct bstNode* root){
    if(root==NULL){
        printf("error,tree is empty");
    } else if (root->right==NULL){
        printf("minimum elelment in the tree using recursion is:%d\n", root->data );
        return;
    }
    return recursionFindMax(root->right);
}
int main(){
    struct bstNode *root=NULL;
    root = insert(13, root);
    root = insert(9,root);
    root = insert(15,root);
    root = insert(7,root);
    root = insert(14,root);
    bool retVal = search(16,root);
    retVal==true? printf("found\n") : printf("not found\n");
    findMin(root);
    findMax(root);
    recursionFindMin(root);
    recursionFindMax(root);
}
